% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cranly-package.R
\name{package_by}
\alias{package_by}
\alias{package_with}
\alias{author_with}
\alias{author_of}
\alias{suggests}
\alias{imports}
\alias{depends}
\alias{linking_to}
\alias{enhances}
\alias{maintainer_of}
\alias{maintained_by}
\alias{email_of}
\alias{email_with}
\alias{description_of}
\alias{title_of}
\alias{license_of}
\alias{version_of}
\title{Find packages, authors, maintainers, license, versions etc by authors, packages or names matching a specific string}
\usage{
package_by(x, author = NULL, exact = FALSE, flat = TRUE)

package_with(x, name = NULL, exact = FALSE, flat = TRUE)

author_with(x, name = NULL, exact = FALSE, flat = TRUE)

author_of(x, package = NULL, exact = FALSE, flat = TRUE)

suggests(x, package = NULL, exact = FALSE, flat = TRUE)

imports(x, package = NULL, exact = FALSE, flat = TRUE)

depends(x, package = NULL, exact = FALSE, flat = TRUE)

linking_to(x, package = NULL, exact = FALSE, flat = TRUE)

enhances(x, package = NULL, exact = FALSE, flat = TRUE)

maintainer_of(x, package = NULL, exact = FALSE, flat = TRUE)

maintained_by(x, author = NULL, exact = FALSE, flat = TRUE)

email_of(x, author = NULL, exact = FALSE, flat = TRUE)

email_with(x, name = NULL, exact = FALSE, flat = TRUE)

description_of(x, package = NULL, exact = FALSE, flat = TRUE)

title_of(x, package = NULL, exact = FALSE, flat = TRUE)

license_of(x, package = NULL, exact = FALSE, flat = TRUE)

version_of(x, package = NULL, exact = FALSE, flat = TRUE)
}
\arguments{
\item{x}{a \code{\link{cranly_network}} object}

\item{author}{a vector of character strings with the author names to be matched. Default is \code{Inf} which returns all available author in \code{x} for further subsetting}

\item{exact}{logical. Should we use exact matching? Default is \code{TRUE}}

\item{flat}{if \code{TRUE} (default) then the results is an unnamed character vector. See Details for what each function returns when \code{flat = FALSE}.}

\item{name}{a vector of character strings with the names to be matched. If \code{Inf} all available names in \code{x} are returned. If \code{NULL} (default) nothing is matched}

\item{package}{a vector of character strings with the package names to be matched. Default is \code{Inf} which returns all available packages in \code{x} for further subsetting}
}
\description{
Find packages, authors, maintainers, license, versions etc by authors, packages or names matching a specific string
}
\details{

}
\examples{
\donttest{
# Using a package directives network
data("pkg_net_20190710", package = "cranly")
## Find all packages containing glm in their name
package_with(pkg_net_20190710, name = "glm")
## Find all authors of packages containing brglm in their name
author_of(pkg_net_20190710, package = "rglm", exact = FALSE)
## Find all packages with brglm in their name
package_with(pkg_net_20190710, name = "rglm", exact = FALSE)
## Find all authors of the package brglm2
author_of(pkg_net_20190710, package = "brglm2", exact = TRUE)
## Find all authors with Ioannis in their name
author_with(pkg_net_20190710, name = "Ioannis", exact = FALSE)
## Find all packages that package Rcpp suggests
suggests(pkg_net_20190710, package = "Rcpp", exact = TRUE)
## Find all packages that package Rcpp imports
imports(pkg_net_20190710, package = "Rcpp", exact = TRUE)
## Find all packages that package RcppArmadillo is linking to
linking_to(pkg_net_20190710, package = "RcppArmadillo", exact = TRUE)

## Using an author collaboration network
data("aut_net_20190710", package = "cranly")
## Find all packages containing glm in their name
package_with(aut_net_20190710, name = "glm")
## Find all authors of packages containing brglm in their name
author_of(aut_net_20190710, package = "rglm", exact = FALSE)
## Find all packages with brglm in their name
package_with(aut_net_20190710, name = "rglm", exact = FALSE)
## Find all authors of the package brglm2
author_of(aut_net_20190710, package = "brglm2", exact = TRUE)
## Find all authors with Ioannis in their name
author_with(aut_net_20190710, name = "Ioannis", exact = FALSE)
}
}
